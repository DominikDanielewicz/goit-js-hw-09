{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAASH,SAASC,cAAc,wBACzBD,SAASC,cAAc,QAa/BG,iBAAiB,UAAU,SAAAC,GAC9BA,EAAEC,iBAEFC,YAAW,WACTC,aAAY,WAfhB,IAAuBC,EAAUC,EACzBC,GADeF,EAgBHN,EAAOS,MAhBMF,EAgBCR,EAAUU,MAfpCD,EAAgBE,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GACvBN,EACFK,EAAQ,CAAEP,WAAUC,UAEpBO,EAAO,CAAER,WAAUC,S,KAWhBQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACjBU,EAAAvB,GAASwB,OAAOC,QACd,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,IAGjDc,OAAM,SAAAL,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAClBU,EAAAvB,GAASwB,OAAOI,QACd,sBAAqCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,MAGhDR,EAAUU,M,GACZb,EAAWa,M","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\nimport Notiflix from 'notiflix';\n\nconst firstDelay = document.querySelector(\"input[name='delay']\");\nconst delayStep = document.querySelector(\"input[name='step']\");\nconst amount = document.querySelector(\"input[name='amount']\");\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  setTimeout(() => {\n    setInterval(() => {\n      createPromise(amount.value, delayStep.value)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }, delayStep.value);\n  }, firstDelay.value);\n});\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","addEventListener","e","preventDefault","setTimeout","setInterval","position","delay","shouldResolve","value","Math","random","Promise","resolve","reject","then","param","$parcel$interopDefault","Notify","failure","concat","catch","success"],"version":3,"file":"03-promises.6971b0fc.js.map"}