{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAASH,SAASC,cAAc,wBActC,SAASG,EAAeC,EAAUC,IAXlC,SAAuBD,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,KAMvBO,CAAcR,EAAUC,GACrBQ,MAAK,SAAAC,G,IAAGC,EAAQD,EAARV,SAAUY,EAAKF,EAALT,MACjBY,EAAArB,GAASsB,OAAOC,QACd,uBACIC,OADqBL,EAAW,EAAE,QAErCK,OADCC,OAAOvB,EAAWwB,OAASP,EAAWC,EACvC,M,IAGJO,OAAM,SAAAT,G,IAAGC,EAAQD,EAARV,SAAUY,EAAKF,EAALT,MAClBY,EAAArB,GAASsB,OAAOM,QACd,sBACIJ,OADoBL,EAAW,EAAE,QAEpCK,OADCC,OAAOvB,EAAWwB,OAASP,EAAWC,EACvC,M,IA1BIjB,SAASC,cAAc,QA+B/ByB,iBAAiB,UAAU,SAAAC,G,kBAU1BC,YAAW,WACTxB,EAAeC,EAAUH,EAAUqB,M,GAClCD,OAAOvB,EAAWwB,OAASlB,EAAWiB,OAAOpB,EAAUqB,O,EAV9D,GADAI,EAAEE,iBAEAP,OAAOvB,EAAWwB,OAAS,GAC3BD,OAAOpB,EAAUqB,OAAS,GAC1BD,OAAOnB,EAAOoB,OAAS,EAEvBL,EAAArB,GAASsB,OAAOM,QAAS,yCAEzB,IAAK,IAAIK,EAAW,EAAGA,EAAW3B,EAAOoB,MAAOO,IAAUC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\nimport Notiflix from 'notiflix';\n\nconst firstDelay = document.querySelector(\"input[name='delay']\");\nconst delayStep = document.querySelector(\"input[name='step']\");\nconst amount = document.querySelector(\"input[name='amount']\");\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nfunction promiseCreator(position, delay) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position + 1} in ${\n          Number(firstDelay.value) + position * delay\n        }ms`\n      );\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(\n        `❌ Rejected promise ${position + 1} in ${\n          Number(firstDelay.value) + position * delay\n        }ms`\n      );\n    });\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  if (\n    Number(firstDelay.value) < 0 ||\n    Number(delayStep.value) < 0 ||\n    Number(amount.value) < 0\n  ) {\n    Notiflix.Notify.failure(`❌ Please provide positive values`);\n  } else {\n    for (let position = 0; position < amount.value; position++) {\n      setTimeout(() => {\n        promiseCreator(position, delayStep.value);\n      }, Number(firstDelay.value) + position * Number(delayStep.value));\n    }\n  }\n});\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$promiseCreator","position","delay","shouldResolve","Math","random","Promise","resolve","reject","$ce04d3a99e08e73b$var$createPromise","then","param","_$position","_$delay","$parcel$interopDefault","Notify","success","concat","Number","value","catch","failure","addEventListener","e","setTimeout","preventDefault","position1","_loop"],"version":3,"file":"03-promises.87abbe47.js.map"}