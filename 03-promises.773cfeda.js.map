{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAASH,SAASC,cAAc,wBAGtC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,G,CARpBN,SAASC,cAAc,QAa/BY,iBAAiB,UAAUC,IAC9BA,EAAEC,iBAEF,IAAIC,EAAW,EAEfC,YAAW,KACTb,EAAcY,EAAUd,EAAUgB,OAC/BC,MAAK,EAACd,SAAEA,EAAQC,MAAEA,MACjBc,EAAAvB,GAASwB,OAAOC,QACd,uBAAqBjB,QAAiBN,EAAEmB,UAAmB,IAG9DK,OAAM,EAAClB,SAAEA,EAAQC,MAAEA,MAClBc,EAAAvB,GAASwB,OAAOG,QACd,sBAAoBnB,QAAiBN,EAAEmB,UAAmB,IAGhEF,IACA,MAAMS,EAAWC,aAAY,KACvBV,GAAYb,EAAOe,OACrBS,cAAcF,GAEhBrB,EAAcY,EAAUd,EAAUgB,OAC/BC,MAAK,EAACd,SAAEA,EAAQC,MAAEA,MACjBc,EAAAvB,GAASwB,OAAOC,QACd,uBAAqBjB,QAAiBuB,OAClC7B,EAAKmB,OAAiBZ,GAAQD,EAAY,OAC3C,IAGNkB,OAAM,EAAClB,SAAEA,EAAQC,MAAEA,MAClBc,EAAAvB,GAASwB,OAAOG,QACd,sBAAoBnB,QAAeuB,OACjC7B,EAAOmB,OAAiBZ,GAAQD,EAAY,OAC3C,IAGTW,GAAU,GACTd,EAAUgB,MAAM,GAClBnB,EAAWmB,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\nimport Notiflix from 'notiflix';\n\nconst firstDelay = document.querySelector(\"input[name='delay']\");\nconst delayStep = document.querySelector(\"input[name='step']\");\nconst amount = document.querySelector(\"input[name='amount']\");\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  let position = 1;\n\n  setTimeout(() => {\n    createPromise(position, delayStep.value)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `✅ Fulfilled promise ${position} in ${firstDelay.value}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `❌ Rejected promise ${position} in ${firstDelay.value}ms`\n        );\n      });\n    position++;\n    const interval = setInterval(() => {\n      if (position >= amount.value) {\n        clearInterval(interval);\n      }\n      createPromise(position, delayStep.value)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `✅ Fulfilled promise ${position} in ${\n              Number(firstDelay.value) + delay * (position - 1)\n            }ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `❌ Rejected promise ${position} in ${\n              Number(firstDelay.value) + delay * (position - 1)\n            }ms`\n          );\n        });\n      position++;\n    }, delayStep.value);\n  }, firstDelay.value);\n});\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$firstDelay","document","querySelector","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","e","preventDefault","position1","setTimeout","value","then","$parcel$interopDefault","Notify","failure","catch","success","interval","setInterval","clearInterval","Number"],"version":3,"file":"03-promises.773cfeda.js.map"}